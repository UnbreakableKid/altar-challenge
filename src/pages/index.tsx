import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import { signIn, signOut, useSession } from "next-auth/react";
import { Center, Stack, Text } from "@chakra-ui/react";
import { useState } from "react";
import CustomGrid from "../components/CustomGrid";
import Header from "../components/Header";
import CodeBox from "../components/CodeBox";
import GenerationStatus from "../components/GenerationStatus";

const Home: NextPage = () => {
  const [inputValue, setInputValue] = useState('');
  const [inputState, setInputState] = useState(true);
  const [generateGrid, setGenerateGrid] = useState<"generate" | 'pause' | 'disabled'>('disabled');
  const { data: Grid, isLoading } = trpc.grid.generate.useQuery(undefined, {
    refetchInterval: 2000, enabled: generateGrid === 'generate'
  });
  const { data: Code, refetch } = trpc.code.generate.useQuery({ character: inputValue, grid: Grid }, {
    enabled: !!Grid && generateGrid === 'generate', onSuccess: () => {
      if (inputState && inputValue !== '') {
        setInputState(false);
        //wait 4 seconds before allowing the user to generate another code
        setTimeout(() => {
          setInputState(true);
        }, 4000);
      }
    }
  });

  const isDevEnv = process.env.NODE_ENV === 'development';

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const value = e.target.value;
    setInputValue(value);
    refetch();
  }

  return (
    <>
      <Head>
        <title>Grid</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Stack>
        <Header generateGrid={generateGrid} handleInputChange={handleInputChange} inputState={inputState} inputValue={inputValue} setGenerateGrid={setGenerateGrid} />
        {generateGrid === 'disabled' ?
          <Center>
            <Text>Click on the button to generate a grid</Text>
          </Center>
          :
          <>
            <CustomGrid code={Grid?.split('')} />
            <Stack >
              <Center>
                <CodeBox Code={Code} isDevEnv generateGrid={generateGrid} />
              </Center>
              {isDevEnv && inputValue !== '' && (
                <CustomGrid code={Code?.grid?.split('')} isDebugTable />
              )}
            </Stack>
          </>
        }
      </Stack>
    </>
  );
};

export default Home;